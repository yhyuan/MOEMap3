/*
arcgislink.js (http://google-maps-utility-library-v3.googlecode.com/svn/trunk/arcgislink/)

arcgislink.js is modified to decrease the number of digitals after the decimal point. Now the 
latitude and longitude only have six digitals after the decimal point. The length of URL is decreased 
to make sure when buffer circle is combined with other conditions, the application is still working. 

Aug 23, 2013: arcgislink.js is modified to get ride the dependency on google maps by adding a global variable
dependOnGoogleMaps. If this is true, Google Maps will be initialized. Otherwise, this is purely used to generate report. 
*/
//var dependOnGoogleMaps = false;
(function(){var gmaps=gmaps||{};var RAD_DEG=Math.PI/180;var jsonpID_=0;window.ags_jsonp=window.ags_jsonp||{};var G={OverlayView:function(){},event:{trigger:function(){}}};if(!!google.maps){G=google.maps}var WGS84,NAD83,WEB_MERCATOR,WEB_MERCATOR_AUX;var Config={proxyUrl:null,alwaysUseProxy:false};var spatialReferences_={};var Util={};function extractString_(full,start,end){var i=(start==="")?0:full.indexOf(start);var e=end===""?full.length:full.indexOf(end,i+start.length);return full.substring(i+start.length,e)}function isString_(o){return o&&typeof o==="string"}function isArray_(o){return o&&o.splice}function isNumber_(o){return typeof o==="number"}function augmentObject_(src,dest,force){if(src&&dest){var p;for(p in src){if(force||!(p in dest)){dest[p]=src[p]}}}return dest}function triggerEvent_(src,evtName,args){G.event.trigger.apply(this,arguments)}function handleErr_(errback,json){if(errback&&json&&json.error){errback(json.error)}}function formatTimeString_(time,endTime){var ret="";if(time){ret+=(time.getTime()-time.getTimezoneOffset()*60000)}if(endTime){ret+=", "+(endTime.getTime()-endTime.getTimezoneOffset()*60000)}return ret}function setNodeOpacity_(node,op){op=Math.min(Math.max(op,0),1);if(node){var st=node.style;if(typeof st.opacity!=="undefined"){st.opacity=op}if(typeof st.filters!=="undefined"){st.filters.alpha.opacity=Math.floor(100*op)}if(typeof st.filter!=="undefined"){st.filter="alpha(opacity:"+Math.floor(op*100)+")"}}}function getLayerDefsString_(defs){var strDefs="";for(var x in defs){if(defs.hasOwnProperty(x)){if(strDefs.length>0){strDefs+=";"}strDefs+=(x+":"+defs[x])}}return strDefs}function getXmlHttp_(){if(typeof XMLHttpRequest==="undefined"){try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e1){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e2){}throw new Error("This browser does not support XMLHttpRequest.")}else{return new XMLHttpRequest()}}var GeometryType={POINT:"esriGeometryPoint",MULTIPOINT:"esriGeometryMultipoint",POLYLINE:"esriGeometryPolyline",POLYGON:"esriGeometryPolygon",ENVELOPE:"esriGeometryEnvelope"};function getGeometryType_(obj){var o=obj;if(isArray_(obj)&&obj.length>0){o=obj[0]}if(o instanceof G.LatLng||o instanceof G.Marker){if(isArray_(obj)&&obj.length>1){return GeometryType.MULTIPOINT}else{return GeometryType.POINT}}else{if(o instanceof G.Polyline){return GeometryType.POLYLINE}else{if(o instanceof G.Polygon){return GeometryType.POLYGON}else{if(o instanceof G.LatLngBounds){return GeometryType.ENVELOPE}else{if(o.x!==undefined&&o.y!==undefined){return GeometryType.POINT}else{if(o.points){return GeometryType.MULTIPOINT}else{if(o.paths){return GeometryType.POLYLINE}else{if(o.rings){return GeometryType.POLYGON}}}}}}}}return null}function isOverlay_(obj){var o=obj;if(isArray_(obj)&&obj.length>0){o=obj[0]}if(isArray_(o)&&o.length>0){o=o[0]}if(o instanceof G.LatLng||o instanceof G.Marker||o instanceof G.Polyline||o instanceof G.Polygon||o instanceof G.LatLngBounds){return true}return false}function formatSRParam_(sr){if(!sr){return null}return isNumber_(sr)?sr:sr.wkid?sr.wkid:sr.toJSON()}function fromLatLngsToJSON_(pts,close){var arr=[];var latlng;for(var i=0,c=pts.getLength();i<c;i++){latlng=pts.getAt(i);arr.push("["+latlng.lng().toFixed(6)+","+latlng.lat().toFixed(6)+"]")}if(close&&arr.length>0){arr.push("["+pts.getAt(0).lng().toFixed(6)+","+pts.getAt(0).lat().toFixed(6)+"]")}return arr.join(",")}function fromOverlaysToJSON_(geom){var gtype=getGeometryType_(geom);var g,gs,i,pts;var json="{";switch(gtype){case GeometryType.POINT:g=isArray_(geom)?geom[0]:geom;if(g instanceof G.Marker){g=g.getPosition()}json+="x:"+g.lng()+",y:"+g.lat();break;case GeometryType.MULTIPOINT:pts=[];for(i=0;i<geom.length;i++){if(geom[i] instanceof G.Marker){g=geom[i].getPosition()}else{g=geom[i]}pts.push("["+g.lng()+","+g.lat()+"]")}json+="points: ["+pts.join(",")+"]";break;case GeometryType.POLYLINE:pts=[];gs=isArray_(geom)?geom:[geom];for(i=0;i<gs.length;i++){pts.push("["+fromLatLngsToJSON_(gs[i].getPath())+"]")}json+="paths:["+pts.join(",")+"]";break;case GeometryType.POLYGON:pts=[];g=isArray_(geom)?geom[0]:geom;var paths=g.getPaths();for(i=0;i<paths.getLength();i++){pts.push("["+fromLatLngsToJSON_(paths.getAt(i),true)+"]")}json+="rings:["+pts.join(",")+"]";break;case GeometryType.ENVELOPE:g=isArray_(geom)?geom[0]:geom;json+="xmin:"+g.getSouthWest().lng()+",ymin:"+g.getSouthWest().lat()+",xmax:"+g.getNorthEast().lng()+",ymax:"+g.getNorthEast().lat();break}json+=", spatialReference:{wkid:4326}";json+="}";return json}function fromGeometryToJSON_(geom){function fromPointsToJSON(pts){var arr=[];for(var i=0,c=pts.length;i<c;i++){arr.push("["+pts[i][0]+","+pts[i][1]+"]")}return"["+arr.join(",")+"]"}function fromLinesToJSON(lines){var arr=[];for(var i=0,c=lines.length;i<c;i++){arr.push(fromPointsToJSON(lines[i]))}return"["+arr.join(",")+"]"}var json="{";if(geom.x){json+="x:"+geom.x+",y:"+geom.y}else{if(geom.xmin){json+="xmin:"+geom.xmin+",ymin:"+geom.ymin+",xmax:"+geom.xmax+",ymax:"+geom.ymax}else{if(geom.points){json+="points:"+fromPointsToJSON(geom.points)}else{if(geom.paths){json+="paths:"+fromLinesToJSON(geom.paths)}else{if(geom.rings){json+="rings:"+fromLinesToJSON(geom.rings)}}}}}json+="}";return json}function fromEnvelopeToLatLngBounds_(extent){var sr=spatialReferences_[extent.spatialReference.wkid||extent.spatialReference.wkt];sr=sr||WGS84;var sw=sr.inverse([extent.xmin,extent.ymin]);var ne=sr.inverse([extent.xmax,extent.ymax]);return new G.LatLngBounds(new G.LatLng(sw[1],sw[0]),new G.LatLng(ne[1],ne[0]))}function fromJSONToOverlays_(geom,opts){var ovs=null;var ov;var i,ic,j,jc,parts,part,lnglat,latlngs;opts=opts||{};if(geom){ovs=[];if(geom.x){ov=new G.Marker(augmentObject_(opts.markerOptions||opts,{position:new G.LatLng(geom.y,geom.x)}));ovs.push(ov)}else{parts=geom.points||geom.paths||geom.rings;if(!parts){return ovs}var rings=[];for(i=0,ic=parts.length;i<ic;i++){part=parts[i];if(geom.points){ov=new G.Marker(augmentObject_(opts.markerOptions||opts,{position:new G.LatLng(part[1],part[0])}));ovs.push(ov)}else{latlngs=[];for(j=0,jc=part.length;j<jc;j++){lnglat=part[j];latlngs.push(new G.LatLng(lnglat[1],lnglat[0]))}if(geom.paths){ov=new G.Polyline(augmentObject_(opts.polylineOptions||opts,{path:latlngs}));ovs.push(ov)}else{if(geom.rings){rings.push(latlngs)}}}}if(geom.rings){ov=new G.Polygon(augmentObject_(opts.polygonOptions||opts,{paths:rings}));ovs.push(ov)}}}return ovs}function parseFeatures_(features,ovOpts){if(features){var i,I,f;for(i=0,I=features.length;i<I;i++){f=features[i];if(f.geometry){f.geometry=fromJSONToOverlays_(f.geometry,ovOpts)}}}}function formatRequestString_(o){var ret;if(typeof o==="object"){if(isArray_(o)){ret=[];for(var i=0,I=o.length;i<I;i++){ret.push(formatRequestString_(o[i]))}return"["+ret.join(",")+"]"}else{if(isOverlay_(o)){return fromOverlaysToJSON_(o)}else{if(o.toJSON){return o.toJSON()}else{ret="";for(var x in o){if(o.hasOwnProperty(x)){if(ret.length>0){ret+=", "}ret+=x+":"+formatRequestString_(o[x])}}return"{"+ret+"}"}}}}return o.toString()}function fromLatLngsToFeatureSet_(latlngs){var i,I,latlng;var features=[];for(i=0,I=latlngs.length;i<I;i++){latlng=latlngs[i];if(latlng instanceof G.Marker){latlng=latlng.getPosition()}features.push({geometry:{x:latlng.lng(),y:latlng.lat(),spatialReference:{wkid:4326}}})}return{type:'"features"',features:features,doNotLocateOnRestrictedElements:false}}function prepareGeometryParams_(p){var params={};if(!p){return null}var json=[];var g,isOv;if(p.geometries&&p.geometries.length>0){g=p.geometries[0];isOv=isOverlay_(g);for(var i=0,c=p.geometries.length;i<c;i++){if(isOv){json.push(fromOverlaysToJSON_(p.geometries[i]))}else{json.push(fromGeometryToJSON_(p.geometries[i]))}}}if(!p.geometryType){p.geometryType=getGeometryType_(g)}if(isOv){params.inSR=WGS84.wkid}else{if(p.inSpatialReference){params.inSR=formatSRParam_(p.inSpatialReference)}}if(p.outSpatialReference){params.outSR=formatSRParam_(p.outSpatialReference)}params.geometries='{geometryType:"'+p.geometryType+'", geometries:['+json.join(",")+"]}";return params}function log_(msg){if(window.console){window.console.log(msg)}else{var l=document.getElementById("_ags_log");if(l){l.innerHTML=l.innerHTML+msg+"<br/>"}}}function formatParams_(params){var query="";if(params){params.f=params.f||"json";for(var x in params){if(params.hasOwnProperty(x)&&params[x]!==null&&params[x]!==undefined){var val=formatRequestString_(params[x]);query+=(query.length>0?"&":"")+(x+"="+(escape?escape(val):encodeURIComponent(val)))}}}return query}function callback_(fn,obj){var args=[];for(var i=2,c=arguments.length;i<c;i++){args.push(arguments[i])}return function(){fn.apply(obj,args)}}function addCopyrightInfo_(cpArray,mapService,map){if(mapService.hasLoaded()){cpArray.push(mapService.copyrightText)}else{G.event.addListenerOnce(mapService,"load",function(){setCopyrightInfo_(map)})}}function setCopyrightInfo_(map){var div=null;if(map){var mvc=map.controls[G.ControlPosition.BOTTOM_RIGHT];if(mvc){for(var i=0,c=mvc.getLength();i<c;i++){if(mvc.getAt(i).id==="agsCopyrights"){div=mvc.getAt(i);break}}}if(!div){div=document.createElement("div");div.style.fontFamily="Arial,sans-serif";div.style.fontSize="10px";div.style.textAlign="right";div.id="agsCopyrights";map.controls[G.ControlPosition.BOTTOM_RIGHT].push(div);G.event.addListener(map,"maptypeid_changed",function(){setCopyrightInfo_(map)})}var ovs=map.agsOverlays;var cp=[];var svc,type;if(ovs){for(var i=0,c=ovs.getLength();i<c;i++){addCopyrightInfo_(cp,ovs.getAt(i).mapService_,map)}}var ovTypes=map.overlayMapTypes;if(ovTypes){for(var i=0,c=ovTypes.getLength();i<c;i++){type=ovTypes.getAt(i);if(type instanceof MapType){for(var j=0,cj=type.tileLayers_.length;j<cj;j++){addCopyrightInfo_(cp,type.tileLayers_[j].mapService_,map)}}}}type=map.mapTypes.get(map.getMapTypeId());if(type instanceof MapType){for(var i=0,c=type.tileLayers_.length;i<c;i++){addCopyrightInfo_(cp,type.tileLayers_[i].mapService_,map)}if(type.negative){div.style.color="#ffffff"}else{div.style.color="#000000"}}div.innerHTML=cp.join("<br/>")}}function getJSON_(url,params,callbackName,callbackFn){var sid="ags_jsonp_"+(jsonpID_++)+"_"+Math.floor(Math.random()*1000000);var script=null;params=params||{};params[callbackName||"callback"]="ags_jsonp."+sid;var query=formatParams_(params);var head=document.getElementsByTagName("head")[0];if(!head){throw new Error("document must have header tag")}var jsonpcallback=function(){if(window.ags_jsonp[sid]){delete window.ags_jsonp[sid]}if(script){head.removeChild(script)}script=null;callbackFn.apply(null,arguments);triggerEvent_(Util,"jsonpend",sid)};window.ags_jsonp[sid]=jsonpcallback;if((query+url).length<2000&&!Config.alwaysUseProxy){script=document.createElement("script");script.src=url+(url.indexOf("?")===-1?"?":"&")+query;script.id=sid;head.appendChild(script)}else{var loc=window.location;var dom=loc.protocol+"//"+loc.hostname+(!loc.port||loc.port===80?"":":"+loc.port+"/");var useProxy=true;if(url.toLowerCase().indexOf(dom.toLowerCase())!==-1){useProxy=false}if(Config.alwaysUseProxy){useProxy=true}if(useProxy&&!Config.proxyUrl){throw new Error("No proxyUrl property in Config is defined")}var xmlhttp=getXmlHttp_();xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState===4){if(xmlhttp.status===200){eval(xmlhttp.responseText)}else{throw new Error("Error code "+xmlhttp.status)}}};xmlhttp.open("POST",useProxy?Config.proxyUrl+"?"+url:url,true);xmlhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xmlhttp.send(query)}triggerEvent_(Util,"jsonpstart",sid);return sid}Util.getJSON=function(url,params,callbackName,callbackFn){getJSON_(url,params,callbackName,callbackFn)};Util.addToMap=function(map,overlays){if(isArray_(overlays)){var ov;for(var i=0,I=overlays.length;i<I;i++){ov=overlays[i];if(isArray_(ov)){Util.addToMap(map,ov)}else{if(isOverlay_(ov)){ov.setMap(map)}}}}};Util.removeFromMap=function(overlays,clearArray){Util.addToMap(null,overlays);if(clearArray){overlays.length=0}};function SpatialReference(params){params=params||{};this.wkid=params.wkid;this.wkt=params.wkt}SpatialReference.prototype.forward=function(lnglat){return lnglat};SpatialReference.prototype.inverse=function(coords){return coords};SpatialReference.prototype.getCircum=function(){return 360};SpatialReference.prototype.toJSON=function(){return"{"+(this.wkid?" wkid:"+this.wkid:"wkt: '"+this.wkt+"'")+"}"};function Geographic(params){params=params||{};SpatialReference.call(this,params)}Geographic.prototype=new SpatialReference();function LambertConformalConic(params){params=params||{};SpatialReference.call(this,params);var f_i=params.inverse_flattening;var phi1=params.standard_parallel_1*RAD_DEG;var phi2=params.standard_parallel_2*RAD_DEG;var phi0=params.latitude_of_origin*RAD_DEG;this.a_=params.semi_major/params.unit;this.lamda0_=params.central_meridian*RAD_DEG;this.FE_=params.false_easting;this.FN_=params.false_northing;var f=1/f_i;var es=2*f-f*f;this.e_=Math.sqrt(es);var m1=this.calc_m_(phi1,es);var m2=this.calc_m_(phi2,es);var tF=this.calc_t_(phi0,this.e_);var t1=this.calc_t_(phi1,this.e_);var t2=this.calc_t_(phi2,this.e_);this.n_=Math.log(m1/m2)/Math.log(t1/t2);this.F_=m1/(this.n_*Math.pow(t1,this.n_));this.rho0_=this.calc_rho_(this.a_,this.F_,tF,this.n_)}LambertConformalConic.prototype=new SpatialReference();LambertConformalConic.prototype.calc_m_=function(phi,es){var sinphi=Math.sin(phi);return Math.cos(phi)/Math.sqrt(1-es*sinphi*sinphi)};LambertConformalConic.prototype.calc_t_=function(phi,e){var esp=e*Math.sin(phi);return Math.tan(Math.PI/4-phi/2)/Math.pow((1-esp)/(1+esp),e/2)};LambertConformalConic.prototype.calc_rho_=function(a,F,t,n){return a*F*Math.pow(t,n)};LambertConformalConic.prototype.calc_phi_=function(t,e,phi){var esp=e*Math.sin(phi);return Math.PI/2-2*Math.atan(t*Math.pow((1-esp)/(1+esp),e/2))};LambertConformalConic.prototype.solve_phi_=function(t_i,e,init){var i=0;var phi=init;var newphi=this.calc_phi_(t_i,e,phi);while(Math.abs(newphi-phi)>1e-9&&i<10){i++;phi=newphi;newphi=this.calc_phi_(t_i,e,phi)}return newphi};LambertConformalConic.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var t=this.calc_t_(phi,this.e_);var rho=this.calc_rho_(this.a_,this.F_,t,this.n_);var theta=this.n_*(lamda-this.lamda0_);var E=this.FE_+rho*Math.sin(theta);var N=this.FN_+this.rho0_-rho*Math.cos(theta);return[E,N]};LambertConformalConic.prototype.inverse=function(coords){var E=coords[0]-this.FE_;var N=coords[1]-this.FN_;var theta=Math.atan(E/(this.rho0_-N));var rho=(this.n_>0?1:-1)*Math.sqrt(E*E+(this.rho0_-N)*(this.rho0_-N));var t=Math.pow((rho/(this.a_*this.F_)),1/this.n_);var init=Math.PI/2-2*Math.atan(t);var phi=this.solve_phi_(t,this.e_,init);var lamda=theta/this.n_+this.lamda0_;return[lamda/RAD_DEG,phi/RAD_DEG]};LambertConformalConic.prototype.getCircum=function(){return Math.PI*2*this.a_};function TransverseMercator(params){params=params||{};SpatialReference.call(this,params);this.a_=params.semi_major/params.unit;var f_i=params.inverse_flattening;this.k0_=params.scale_factor;var phi0=params.latitude_of_origin*RAD_DEG;this.lamda0_=params.central_meridian*RAD_DEG;this.FE_=params.false_easting;this.FN_=params.false_northing;var f=1/f_i;this.es_=2*f-f*f;this.ep4_=this.es_*this.es_;this.ep6_=this.ep4_*this.es_;this.eas_=this.es_/(1-this.es_);this.M0_=this.calc_m_(phi0,this.a_,this.es_,this.ep4_,this.ep6_)}TransverseMercator.prototype=new SpatialReference();TransverseMercator.prototype.calc_m_=function(phi,a,es,ep4,ep6){return a*((1-es/4-3*ep4/64-5*ep6/256)*phi-(3*es/8+3*ep4/32+45*ep6/1024)*Math.sin(2*phi)+(15*ep4/256+45*ep6/1024)*Math.sin(4*phi)-(35*ep6/3072)*Math.sin(6*phi))};TransverseMercator.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var nu=this.a_/Math.sqrt(1-this.es_*Math.pow(Math.sin(phi),2));var T=Math.pow(Math.tan(phi),2);var C=this.eas_*Math.pow(Math.cos(phi),2);var A=(lamda-this.lamda0_)*Math.cos(phi);var M=this.calc_m_(phi,this.a_,this.es_,this.ep4_,this.ep6_);var E=this.FE_+this.k0_*nu*(A+(1-T+C)*Math.pow(A,3)/6+(5-18*T+T*T+72*C-58*this.eas_)*Math.pow(A,5)/120);var N=this.FN_+this.k0_*(M-this.M0_)+nu*Math.tan(phi)*(A*A/2+(5-T+9*C+4*C*C)*Math.pow(A,4)/120+(61-58*T+T*T+600*C-330*this.eas_)*Math.pow(A,6)/720);return[E,N]};TransverseMercator.prototype.inverse=function(coords){var E=coords[0];var N=coords[1];var e1=(1-Math.sqrt(1-this.es_))/(1+Math.sqrt(1-this.es_));var M1=this.M0_+(N-this.FN_)/this.k0_;var mu1=M1/(this.a_*(1-this.es_/4-3*this.ep4_/64-5*this.ep6_/256));var phi1=mu1+(3*e1/2-27*Math.pow(e1,3)/32)*Math.sin(2*mu1)+(21*e1*e1/16-55*Math.pow(e1,4)/32)*Math.sin(4*mu1)+(151*Math.pow(e1,3)/6)*Math.sin(6*mu1)+(1097*Math.pow(e1,4)/512)*Math.sin(8*mu1);var C1=this.eas_*Math.pow(Math.cos(phi1),2);var T1=Math.pow(Math.tan(phi1),2);var N1=this.a_/Math.sqrt(1-this.es_*Math.pow(Math.sin(phi1),2));var R1=this.a_*(1-this.es_)/Math.pow((1-this.es_*Math.pow(Math.sin(phi1),2)),3/2);var D=(E-this.FE_)/(N1*this.k0_);var phi=phi1-(N1*Math.tan(phi1)/R1)*(D*D/2-(5+3*T1+10*C1-4*C1*C1-9*this.eas_)*Math.pow(D,4)/24+(61+90*T1+28*C1+45*T1*T1-252*this.eas_-3*C1*C1)*Math.pow(D,6)/720);var lamda=this.lamda0_+(D-(1+2*T1+C1)*Math.pow(D,3)/6+(5-2*C1+28*T1-3*C1*C1+8*this.eas_+24*T1*T1)*Math.pow(D,5)/120)/Math.cos(phi1);return[lamda/RAD_DEG,phi/RAD_DEG]};TransverseMercator.prototype.getCircum=function(){return Math.PI*2*this.a_};function SphereMercator(params){params=params||{};SpatialReference.call(this,params);this.a_=(params.semi_major||6378137)/(params.unit||1);this.lamda0_=(params.central_meridian||0)*RAD_DEG}SphereMercator.prototype=new SpatialReference();SphereMercator.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var E=this.a_*(lamda-this.lamda0_);var N=(this.a_/2)*Math.log((1+Math.sin(phi))/(1-Math.sin(phi)));return[E,N]};SphereMercator.prototype.inverse=function(coords){var E=coords[0];var N=coords[1];var phi=Math.PI/2-2*Math.atan(Math.exp(-N/this.a_));var lamda=E/this.a_+this.lamda0_;return[lamda/RAD_DEG,phi/RAD_DEG]};SphereMercator.prototype.getCircum=function(){return Math.PI*2*this.a_};function Albers(params){params=params||{};SpatialReference.call(this,params);var f_i=params.inverse_flattening;var phi1=params.standard_parallel_1*RAD_DEG;var phi2=params.standard_parallel_2*RAD_DEG;var phi0=params.latitude_of_origin*RAD_DEG;this.a_=params.semi_major/params.unit;this.lamda0_=params.central_meridian*RAD_DEG;this.FE_=params.false_easting;this.FN_=params.false_northing;var f=1/f_i;var es=2*f-f*f;this.e_=Math.sqrt(es);var m1=this.calc_m_(phi1,es);var m2=this.calc_m_(phi2,es);var q1=this.calc_q_(phi1,this.e_);var q2=this.calc_q_(phi2,this.e_);var q0=this.calc_q_(phi0,this.e_);this.n_=(m1*m1-m2*m2)/(q2-q1);this.C_=m1*m1+this.n_*q1;this.rho0_=this.calc_rho_(this.a_,this.C_,this.n_,q0)}Albers.prototype=new SpatialReference();Albers.prototype.calc_m_=function(phi,es){var sinphi=Math.sin(phi);return Math.cos(phi)/Math.sqrt(1-es*sinphi*sinphi)};Albers.prototype.calc_q_=function(phi,e){var esp=e*Math.sin(phi);return(1-e*e)*(Math.sin(phi)/(1-esp*esp)-(1/(2*e))*Math.log((1-esp)/(1+esp)))};Albers.prototype.calc_rho_=function(a,C,n,q){return a*Math.sqrt(C-n*q)/n};Albers.prototype.calc_phi_=function(q,e,phi){var esp=e*Math.sin(phi);return phi+(1-esp*esp)*(1-esp*esp)/(2*Math.cos(phi))*(q/(1-e*e)-Math.sin(phi)/(1-esp*esp)+Math.log((1-esp)/(1+esp))/(2*e))};Albers.prototype.solve_phi_=function(q,e,init){var i=0;var phi=init;var newphi=this.calc_phi_(q,e,phi);while(Math.abs(newphi-phi)>1e-8&&i<10){i++;phi=newphi;newphi=this.calc_phi_(q,e,phi)}return newphi};Albers.prototype.forward=function(lnglat){var phi=lnglat[1]*RAD_DEG;var lamda=lnglat[0]*RAD_DEG;var q=this.calc_q_(phi,this.e_);var rho=this.calc_rho_(this.a_,this.C_,this.n_,q);var theta=this.n_*(lamda-this.lamda0_);var E=this.FE_+rho*Math.sin(theta);var N=this.FN_+this.rho0_-rho*Math.cos(theta);return[E,N]};Albers.prototype.inverse=function(coords){var E=coords[0]-this.FE_;var N=coords[1]-this.FN_;var rho=Math.sqrt(E*E+(this.rho0_-N)*(this.rho0_-N));var adj=this.n_>0?1:-1;var theta=Math.atan(adj*E/(adj*this.rho0_-adj*N));var q=(this.C_-rho*rho*this.n_*this.n_/(this.a_*this.a_))/this.n_;var init=Math.asin(q/2);var phi=this.solve_phi_(q,this.e_,init);var lamda=theta/this.n_+this.lamda0_;return[lamda/RAD_DEG,phi/RAD_DEG]};Albers.prototype.getCircum=function(){return Math.PI*2*this.a_};Albers.prototype.getCircum=function(){return Math.PI*2*this.a_};WGS84=new Geographic({wkid:4326});NAD83=new Geographic({wkid:4269});WEB_MERCATOR=new SphereMercator({wkid:102113,semi_major:6378137,central_meridian:0,unit:1});WEB_MERCATOR_AUX=new SphereMercator({wkid:102100,semi_major:6378137,central_meridian:0,unit:1});spatialReferences_={"4326":WGS84,"4269":NAD83,"102113":WEB_MERCATOR,"102100":WEB_MERCATOR_AUX};SpatialReference.WGS84=WGS84;SpatialReference.NAD83=NAD83;SpatialReference.WEB_MERCATOR=WEB_MERCATOR;SpatialReference.WEB_MERCATOR_AUX=WEB_MERCATOR_AUX;Util.registerSR=function(wkidt,wktOrSR){var sr=spatialReferences_[""+wkidt];if(sr){return sr}if(wktOrSR instanceof SpatialReference){spatialReferences_[""+wkidt]=wktOrSR;sr=wktOrSR}else{var wkt=wktOrSR||wkidt;var params={wkt:wkidt};if(wkidt===parseInt(wkidt,10)){params={wkid:wkidt}}var prj=extractString_(wkt,'PROJECTION["','"]');var spheroid=extractString_(wkt,"SPHEROID[","]").split(",");if(prj!==""){params.unit=parseFloat(extractString_(extractString_(wkt,"PROJECTION",""),"UNIT[","]").split(",")[1]);params.semi_major=parseFloat(spheroid[1]);params.inverse_flattening=parseFloat(spheroid[2]);params.latitude_of_origin=parseFloat(extractString_(wkt,'"Latitude_Of_Origin",',"]"));params.central_meridian=parseFloat(extractString_(wkt,'"Central_Meridian",',"]"));params.false_easting=parseFloat(extractString_(wkt,'"False_Easting",',"]"));params.false_northing=parseFloat(extractString_(wkt,'"False_Northing",',"]"))}switch(prj){case"":sr=new SpatialReference(params);break;case"Lambert_Conformal_Conic":params.standard_parallel_1=parseFloat(extractString_(wkt,'"Standard_Parallel_1",',"]"));params.standard_parallel_2=parseFloat(extractString_(wkt,'"Standard_Parallel_2",',"]"));sr=new LambertConformalConic(params);break;case"Transverse_Mercator":params.scale_factor=parseFloat(extractString_(wkt,'"Scale_Factor",',"]"));sr=new TransverseMercator(params);break;case"Albers":params.standard_parallel_1=parseFloat(extractString_(wkt,'"Standard_Parallel_1",',"]"));params.standard_parallel_2=parseFloat(extractString_(wkt,'"Standard_Parallel_2",',"]"));sr=new Albers(params);break;default:throw new Error(prj+"  not supported")}if(sr){spatialReferences_[""+wkidt]=sr}}return sr};function Catalog(url){this.url=url;var me=this;getJSON_(url,{},"",function(json){augmentObject_(json,me);triggerEvent_(me,"load")})}function Layer(url){this.url=url;this.definition=null}Layer.prototype.load=function(){var me=this;if(this.loaded_){return}getJSON_(this.url,{},"",function(json){augmentObject_(json,me);me.loaded_=true;triggerEvent_(me,"load")})};Layer.prototype.isInScale=function(scale){if(this.maxScale&&this.maxScale>scale){return false}if(this.minScale&&this.minScale<scale){return false}return true};var SpatialRelationship={INTERSECTS:"esriSpatialRelIntersects",CONTAINS:"esriSpatialRelContains",CROSSES:"esriSpatialRelCrosses",ENVELOPE_INTERSECTS:"esriSpatialRelEnvelopeIntersects",INDEX_INTERSECTS:"esriSpatialRelIndexIntersects",OVERLAPS:"esriSpatialRelOverlaps",TOUCHES:"esriSpatialRelTouches",WITHIN:"esriSpatialRelWithin"};Layer.prototype.query=function(p,callback,errback){if(!p){return}var params=augmentObject_(p,{});if(p.geometry&&!isString_(p.geometry)){params.geometry=fromOverlaysToJSON_(p.geometry);params.geometryType=getGeometryType_(p.geometry);params.inSR=4326}if(p.spatialRelationship){params.spatialRel=p.spatialRelationship;delete params.spatialRelationship}if(p.outFields&&isArray_(p.outFields)){params.outFields=p.outFields.join(",")}if(p.objectIds){params.objectIds=p.objectIds.join(",")}if(p.time){params.time=formatTimeString_(p.time,p.endTime)}params.outSR=4326;params.returnGeometry=p.returnGeometry===false?false:true;params.returnIdsOnly=p.returnIdsOnly===true?true:false;delete params.overlayOptions;getJSON_(this.url+"/query",params,"",function(json){parseFeatures_(json.features,p.overlayOptions);callback(json,json.error);handleErr_(errback,json)})};Layer.prototype.queryRelatedRecords=function(qparams,callback,errback){if(!qparams){return}var params=augmentObject_(qparams,{});params.f=params.f||"json";if(params.outFields&&!isString_(params.outFields)){params.outFields=params.outFields.join(",")}params.returnGeometry=params.returnGeometry===false?false:true;getJSON_(this.url+"/query",params,"",function(json){handleErr_(errback,json);callback(json)})};function MapService(url,opts){this.url=url;this.loaded_=false;var tks=url.split("/");this.name=tks[tks.length-2].replace(/_/g," ");opts=opts||{};if(opts.delayLoad){var me=this;window.setTimeout(function(){me.loadServiceInfo()},opts.delayLoad*1000)}else{this.loadServiceInfo()}}MapService.prototype.loadServiceInfo=function(){var me=this;getJSON_(this.url,{},"",function(json){me.init_(json)})};MapService.prototype.init_=function(json){var me=this;if(json.error){throw new Error(json.error.message)}augmentObject_(json,this);if(json.spatialReference.wkt){this.spatialReference=Util.registerSR(json.spatialReference.wkt)}else{this.spatialReference=spatialReferences_[json.spatialReference.wkid]}if(json.tables!==undefined){getJSON_(this.url+"/layers",{},"",function(json2){me.initLayers_(json2);getJSON_(me.url+"/legend",{},"",function(json3){me.initLegend_(json3);me.setLoaded_()})})}else{me.initLayers_(json);me.setLoaded_()}};MapService.prototype.setLoaded_=function(){this.loaded_=true;triggerEvent_(this,"load")};MapService.prototype.initLayers_=function(json2){var layers=[];var tables=[];this.layers=layers;if(json2.tables){this.tables=tables}var layer,i,c,info;for(i=0,c=json2.layers.length;i<c;i++){info=json2.layers[i];layer=new Layer(this.url+"/"+info.id);augmentObject_(info,layer);layer.visible=layer.defaultVisibility;layers.push(layer)}if(json2.tables){for(i=0,c=json2.tables.length;i<c;i++){info=json2.tables[i];layer=new Layer(this.url+"/"+info.id);augmentObject_(info,layer);tables.push(layer)}}for(i=0,c=layers.length;i<c;i++){layer=layers[i];if(layer.subLayerIds){layer.subLayers=[];for(var j=0,jc=layer.subLayerIds.length;j<jc;j++){var subLayer=this.getLayer(layer.subLayerIds[j]);layer.subLayers.push(subLayer);subLayer.parentLayer=layer}}}};MapService.prototype.initLegend_=function(json3){var layers=this.layers;if(json3.layers){var layer,i,c,info;for(i=0,c=json3.layers.length;i<c;i++){info=json3.layers[i];layer=layers[info.layerId];augmentObject_(info,layer)}}};MapService.prototype.getLayer=function(nameOrId){var layers=this.layers;if(layers){for(var i=0,c=layers.length;i<c;i++){if(nameOrId===layers[i].id){return layers[i]}if(isString_(nameOrId)&&layers[i].name.toLowerCase()===nameOrId.toLowerCase()){return layers[i]}}}return null};MapService.prototype.getLayerDefs_=function(){var ret={};if(this.layers){for(var i=0,c=this.layers.length;i<c;i++){var layer=this.layers[i];if(layer.definition){ret[String(layer.id)]=layer.definition}}}return ret};MapService.prototype.hasLoaded=function(){return this.loaded_};MapService.prototype.getVisibleLayerIds_=function(){var ret=[];if(this.layers){var layer;var i,c;for(i=0,c=this.layers.length;i<c;i++){layer=this.layers[i];if(layer.subLayers){for(var j=0,jc=layer.subLayers.length;j<jc;j++){if(layer.subLayers[j].visible===false){layer.visible=false;break}}}}for(i=0,c=this.layers.length;i<c;i++){layer=this.layers[i];if(layer.subLayers&&layer.subLayers.length>0){continue}if(layer.visible===true){ret.push(layer.id)}}}return ret};MapService.prototype.getInitialBounds=function(){if(this.initialExtent){this.initBounds_=this.initBounds_||fromEnvelopeToLatLngBounds_(this.initialExtent);return this.initBounds_}return null};MapService.prototype.getFullBounds=function(){if(this.fullExtent){this.fullBounds_=this.fullBounds_||fromEnvelopeToLatLngBounds_(this.fullExtent);return this.fullBounds_}return null};MapService.prototype.exportMap=function(p,callback,errback){if(!p||!p.bounds){return}var params={};params.f=p.f;var bnds=p.bounds;params.bbox=""+bnds.getSouthWest().lng()+","+bnds.getSouthWest().lat()+","+bnds.getNorthEast().lng()+","+bnds.getNorthEast().lat();params.size=""+p.width+","+p.height;params.dpi=p.dpi;if(p.imageSR){if(p.imageSR.wkid){params.imageSR=p.imageSR.wkid}else{params.imageSR="{wkt:"+p.imageSR.wkt+"}"}}params.bboxSR="4326";params.format=p.format;var defs=p.layerDefinitions;if(defs===undefined){defs=this.getLayerDefs_()}params.layerDefs=getLayerDefsString_(defs);var vlayers=p.layerIds;var layerOpt=p.layerOption||"show";if(vlayers===undefined){vlayers=this.getVisibleLayerIds_()}if(vlayers.length>0){params.layers=layerOpt+":"+vlayers.join(",")}else{if(this.loaded_&&callback){callback({href:null});return}}params.transparent=(p.transparent===false?false:true);if(p.time){params.time=formatTimeString_(p.time,p.endTime)}params.layerTimeOptions=p.layerTimeOptions;if(params.f==="image"){return this.url+"/export?"+formatParams_(params)}else{getJSON_(this.url+"/export",params,"",function(json){if(json.extent){json.bounds=fromEnvelopeToLatLngBounds_(json.extent);delete json.extent;callback(json)}else{handleErr_(errback,json.error)}})}};MapService.prototype.identify=function(p,callback,errback){if(!p){return}var params={};params.geometry=fromOverlaysToJSON_(p.geometry);params.geometryType=getGeometryType_(p.geometry);params.mapExtent=fromOverlaysToJSON_(p.bounds);params.tolerance=p.tolerance||2;params.sr=4326;params.imageDisplay=""+p.width+","+p.height+","+(p.dpi||96);params.layers=(p.layerOption||"all");if(p.layerIds){params.layers+=":"+p.layerIds.join(",")}if(p.layerDefs){params.layerDefs=getLayerDefsString_(p.layerDefs)}params.maxAllowableOffset=p.maxAllowableOffset;params.returnGeometry=(p.returnGeometry===false?false:true);getJSON_(this.url+"/identify",params,"",function(json){var rets=null;var i,js,g;if(json.results){rets=[];for(i=0;i<json.results.length;i++){js=json.results[i];g=fromJSONToOverlays_(js.geometry,p.overlayOptions);js.feature={geometry:g,attributes:js.attributes};delete js.attributes}}callback(json);handleErr_(errback,json)})};MapService.prototype.find=function(opts,callback,errback){if(!opts){return}var params=augmentObject_(opts,{});if(opts.layerIds){params.layers=opts.layerIds.join(",");delete params.layerIds}if(opts.searchFields){params.searchFields=opts.searchFields.join(",")}params.contains=(opts.contains===false?false:true);if(opts.layerDefinitions){params.layerDefs=getLayerDefsString_(opts.layerDefinitions);delete params.layerDefinitions}params.sr=4326;params.returnGeometry=(opts.returnGeometry===false?false:true);getJSON_(this.url+"/find",params,"",function(json){var rets=null;var i,js,g;if(json.results){rets=[];for(i=0;i<json.results.length;i++){js=json.results[i];g=fromJSONToOverlays_(js.geometry,opts.overlayOptions);js.feature={geometry:g,attributes:js.attributes};delete js.attributes}}callback(json);handleErr_(errback,json)})};MapService.prototype.queryLayer=function(layerNameOrId,params,callback,errback){var layer=this.getLayer(layerNameOrId);if(layer){layer.query(params,callback,errback)}};function GeocodeService(url){this.url=url;this.loaded_=false;var me=this;getJSON_(url,{},"",function(json){me.init_(json)})}GeocodeService.prototype.init_=function(json){augmentObject_(json,this);if(json.spatialReference){this.spatialReference=spatialReferences_[json.spatialReference.wkid||json.spatialReference.wkt]||WGS84}this.loaded_=true;triggerEvent_(this,"load")};GeocodeService.prototype.findAddressCandidates=function(gparams,callback,errback){var params=augmentObject_(gparams,{});if(params.inputs){augmentObject_(params.inputs,params);delete params.inputs}if(isArray_(params.outFields)){params.outFields=params.outFields.join(",")}var me=this;getJSON_(this.url+"/findAddressCandidates",params,"",function(json){if(json.candidates){var res,loc;var cands=[];for(var i=0;i<json.candidates.length;i++){res=json.candidates[i];loc=res.location;if(!isNaN(loc.x)&&!isNaN(loc.y)){var ll=[loc.x,loc.y];var sr=me.spatialReference;if(gparams.outSR){sr=spatialReferences_[gparams.outSR]}if(sr){ll=sr.inverse(ll)}res.location=new G.LatLng(ll[1],ll[0]);cands[cands.length]=res}}}callback({candidates:cands});handleErr_(errback,json)})};GeocodeService.prototype.geocode=function(params,callback){this.findAddressCandidates(params,callback)};GeocodeService.prototype.reverseGeocode=function(params,callback,errback){if(!isString_(params.location)){params.location=fromOverlaysToJSON_(params.location)}params.outSR=4326;var me=this;getJSON_(this.url+"/reverseGeocode",params,"",function(json){if(json.location){var loc=json.location;if(!isNaN(loc.x)&&!isNaN(loc.y)){var ll=[loc.x,loc.y];if(me.spatialReference){ll=me.spatialReference.inverse(ll)}json.location=new G.LatLng(ll[1],ll[0])}}callback(json);handleErr_(errback,json)})};function GeometryService(url){this.url=url;this.t="geocodeservice"}GeometryService.prototype.project=function(p,callback,errback){var params=prepareGeometryParams_(p);getJSON_(this.url+"/project",params,"callback",function(json){var geom=[];if(p.outSpatialReference===4326||p.outSpatialReference.wkid===4326){for(var i=0,c=json.geometries.length;i<c;i++){geom.push(fromJSONToOverlays_(json.geometries[i]))}json.geometries=geom}callback(json);handleErr_(errback,json)})};var SRUnit={METER:9001,FOOT:9002,SURVEY_FOOT:9003,SURVEY_MILE:9035,KILLOMETER:9036,RADIAN:9101,DEGREE:9102};GeometryService.prototype.buffer=function(p,callback,errback){var params=prepareGeometryParams_(p);if(p.bufferSpatialReference){params.bufferSR=formatSRParam_(p.bufferSpatialReference)}params.outSR=4326;params.distances=p.distances.join(",");if(p.unit){params.unit=p.unit}getJSON_(this.url+"/buffer",params,"callback",function(json){var geom=[];if(json.geometries){for(var i=0,c=json.geometries.length;i<c;i++){geom.push(fromJSONToOverlays_(json.geometries[i],p.overlayOptions))}}json.geometries=geom;callback(json);handleErr_(errback,json)})};function GPService(url){this.url=url;this.loaded_=false;var me=this;getJSON_(url,{},"",function(json){augmentObject_(json,me);me.loaded_=true;triggerEvent_(me,"load")})}function GPTask(url){this.url=url;this.loaded_=false;var me=this;getJSON_(url,{},"",function(json){augmentObject_(json,me);me.loaded_=true;triggerEvent_(me,"load")})}GPTask.prototype.execute=function(p,callback,errback){var params={};if(p.parameters){augmentObject_(p.parameters,params)}if(p.outSpatialReference){params["env:outSR"]=formatSRParam_(p.outSpatialReference)}else{params["env:outSR"]=4326}if(p.processSpatialReference){params["env:processSR"]=formatSRParam_(p.processSpatialReference)}getJSON_(this.url+"/execute",params,"",function(json){if(json.results){var res,f;for(var i=0;i<json.results.length;i++){res=json.results[i];if(res.dataType==="GPFeatureRecordSetLayer"){for(var j=0,J=res.value.features.length;j<J;j++){f=res.value.features[j];if(f.geometry){f.geometry=fromJSONToOverlays_(f.geometry,p.overlayOptions)}}}}}callback(json);handleErr_(errback,json)})};function NetworkService(url){this.url=url;this.loaded_=false;var me=this;getJSON_(url,{},"",function(json){augmentObject_(json,me);me.loaded_=true;triggerEvent_(me,"load")})}function RouteTask(url){this.url=url}RouteTask.prototype.solve=function(opts,callback,errback){if(!opts){return}var params=augmentObject_(opts,{});if(isArray_(opts.stops)){params.stops=fromLatLngsToFeatureSet_(opts.stops)}if(isArray_(opts.barriers)){if(opts.barriers.length>0){params.barriers=fromLatLngsToFeatureSet_(opts.barriers)}else{delete params.barriers}}params.returnRoutes=(opts.returnRoutes===false?false:true);params.returnDirections=(opts.returnDirections===true?true:false);params.returnBarriers=(opts.returnBarriers===true?true:false);params.returnStops=(opts.returnStops===true?true:false);getJSON_(this.url+"/solve",params,"",function(json){if(json.routes){parseFeatures_(json.routes.features,opts.overlayOptions)}callback(json);handleErr_(errback,json)})};function Projection(tileInfo){this.lods_=tileInfo?tileInfo.lods:null;this.spatialReference_=tileInfo?spatialReferences_[tileInfo.spatialReference.wkid||tileInfo.spatialReference.wkt]:WEB_MERCATOR;if(!this.spatialReference_){throw new Error("unsupported Spatial Reference")}this.resolution0_=tileInfo?tileInfo.lods[0].resolution:156543.033928;this.minZoom=Math.floor(Math.log(this.spatialReference_.getCircum()/this.resolution0_/256)/Math.LN2+0.5);this.maxZoom=tileInfo?this.minZoom+this.lods_.length-1:20;if(G.Size){this.tileSize_=tileInfo?new G.Size(tileInfo.cols,tileInfo.rows):new G.Size(256,256)}this.scale_=Math.pow(2,this.minZoom)*this.resolution0_;this.originX_=tileInfo?tileInfo.origin.x:-20037508.342787;this.originY_=tileInfo?tileInfo.origin.y:20037508.342787;if(tileInfo){var ratio;for(var i=0;i<tileInfo.lods.length-1;i++){ratio=tileInfo.lods[i].resolution/tileInfo.lods[i+1].resolution;if(ratio>2.001||ratio<1.999){throw new Error("This type of map cache is not supported in V3. \nScale ratio between zoom levels must be 2")}}}}Projection.prototype.fromLatLngToPoint=function(latlng,opt_point){if(!latlng||isNaN(latlng.lat())||isNaN(latlng.lng())){return null}var coords=this.spatialReference_.forward([latlng.lng(),latlng.lat()]);var point=opt_point||new G.Point(0,0);point.x=(coords[0]-this.originX_)/this.scale_;point.y=(this.originY_-coords[1])/this.scale_;return point};Projection.prototype.fromLatLngToPoint=Projection.prototype.fromLatLngToPoint;Projection.prototype.fromPointToLatLng=function(pixel,opt_nowrap){if(pixel===null){return null}var x=pixel.x*this.scale_+this.originX_;var y=this.originY_-pixel.y*this.scale_;var geo=this.spatialReference_.inverse([x,y]);return new G.LatLng(geo[1],geo[0])};Projection.prototype.getScale=function(zoom){var zoomIdx=zoom-this.minZoom;var res=0;if(this.lods_[zoomIdx]){res=this.lods_[zoomIdx].scale}return res};Projection.WEB_MECATOR=new Projection();function TileLayer(service,opt_layerOpts){opt_layerOpts=opt_layerOpts||{};if(opt_layerOpts.opacity){this.opacity_=opt_layerOpts.opacity;delete opt_layerOpts.opacity}augmentObject_(opt_layerOpts,this);this.mapService_=(service instanceof MapService)?service:new MapService(service);if(opt_layerOpts.hosts){var pro=extractString_(this.mapService_.url,"","://");var host=extractString_(this.mapService_.url,"://","/");var path=extractString_(this.mapService_.url,pro+"://"+host,"");this.urlTemplate_=pro+"://"+opt_layerOpts.hosts+path;this.numOfHosts_=parseInt(extractString_(opt_layerOpts.hosts,"[","]"),10)}this.name=opt_layerOpts.name||this.mapService_.name;this.maxZoom=opt_layerOpts.maxZoom||19;this.minZoom=opt_layerOpts.minZoom||0;this.dynaZoom=opt_layerOpts.dynaZoom||this.maxZoom;if(this.mapService_.loaded_){this.init_(opt_layerOpts)}else{var me=this;G.event.addListenerOnce(this.mapService_,"load",function(){me.init_(opt_layerOpts)})}this.tiles_={};this.map_=opt_layerOpts.map}TileLayer.prototype.init_=function(opt_layerOpts){if(this.mapService_.tileInfo){this.projection_=new Projection(this.mapService_.tileInfo);this.minZoom=opt_layerOpts.minZoom||this.projection_.minZoom;this.maxZoom=opt_layerOpts.maxZoom||this.projection_.maxZoom}};TileLayer.prototype.getTileUrl=function(tile,zoom){var z=zoom-(this.projection_?this.projection_.minZoom:this.minZoom);var url="";if(!isNaN(tile.x)&&!isNaN(tile.y)&&z>=0&&tile.x>=0&&tile.y>=0){var u=this.mapService_.url;if(this.urlTemplate_){u=this.urlTemplate_.replace("["+this.numOfHosts_+"]",""+((tile.y+tile.x)%this.numOfHosts_))}var prj=this.projection_||(this.map_?this.map_.getProjection():Projection.WEB_MECATOR);if(!prj instanceof Projection){prj=Projection.WEB_MECATOR}var size=prj.tileSize_;var numOfTiles=1<<zoom;var gworldsw=new G.Point(tile.x*size.width/numOfTiles,(tile.y+1)*size.height/numOfTiles);var gworldne=new G.Point((tile.x+1)*size.width/numOfTiles,tile.y*size.height/numOfTiles);var bnds=new G.LatLngBounds(prj.fromPointToLatLng(gworldsw),prj.fromPointToLatLng(gworldne));var fullBounds=this.mapService_.getFullBounds();if(this.mapService_.singleFusedMapCache===false||zoom>this.dynaZoom){var params={f:"image"};params.bounds=bnds;params.format="png32";params.width=size.width;params.height=size.height;params.imageSR=prj.spatialReference_;url=this.mapService_.exportMap(params)}else{if(fullBounds&&!fullBounds.intersects(bnds)){url=""}else{url=u+"/tile/"+z+"/"+tile.y+"/"+tile.x}}}return url};TileLayer.prototype.setOpacity=function(op){this.opacity_=op;var tiles=this.tiles_;for(var x in tiles){if(tiles.hasOwnProperty(x)){setNodeOpacity_(tiles[x],op)}}};TileLayer.prototype.getOpacity=function(){return this.opacity_};TileLayer.prototype.getMapService=function(){return this.mapService_};function MapType(tileLayers,opt_typeOpts){opt_typeOpts=opt_typeOpts||{};var i;if(opt_typeOpts.opacity){this.opacity_=opt_typeOpts.opacity;delete opt_typeOpts.opacity}augmentObject_(opt_typeOpts,this);var layers=tileLayers;if(isString_(tileLayers)){layers=[new TileLayer(tileLayers,opt_typeOpts)]}else{if(tileLayers instanceof MapService){layers=[new TileLayer(tileLayers,opt_typeOpts)]}else{if(tileLayers instanceof TileLayer){layers=[tileLayers]}else{if(tileLayers.length>0&&isString_(tileLayers[0])){layers=[];for(i=0;i<tileLayers.length;i++){layers[i]=new TileLayer(tileLayers[i],opt_typeOpts)}}}}}this.tileLayers_=layers;this.tiles_={};if(opt_typeOpts.maxZoom!==undefined){this.maxZoom=opt_typeOpts.maxZoom}else{var maxZ=0;for(i=0;i<layers.length;i++){maxZ=Math.max(maxZ,layers[i].maxZoom)}this.maxZoom=maxZ}if(layers[0].projection_){this.tileSize=layers[0].projection_.tileSize_;this.projection=layers[0].projection_}else{this.tileSize=new G.Size(256,256)}if(!this.name){this.name=layers[0].name}}MapType.prototype.getTile=function(tileCoord,zoom,ownerDocument){var div=ownerDocument.createElement("div");var tileId="_"+tileCoord.x+"_"+tileCoord.y+"_"+zoom;for(var i=0;i<this.tileLayers_.length;i++){var t=this.tileLayers_[i];if(zoom<=t.maxZoom&&zoom>=t.minZoom){var url=t.getTileUrl(tileCoord,zoom);if(url){var img=ownerDocument.createElement(document.all?"img":"div");img.style.border="0px none";img.style.margin="0px";img.style.padding="0px";img.style.overflow="hidden";img.style.position="absolute";img.style.top="0px";img.style.left="0px";img.style.width=""+this.tileSize.width+"px";img.style.height=""+this.tileSize.height+"px";if(document.all){img.src=url}else{img.style.backgroundImage="url("+url+")"}div.appendChild(img);t.tiles_[tileId]=img;if(t.opacity_!==undefined){setNodeOpacity_(img,t.opacity_)}else{if(this.opacity_!==undefined){setNodeOpacity_(img,this.opacity_)}}}else{}}}this.tiles_[tileId]=div;div.setAttribute("tid",tileId);return div};MapType.prototype.getTile=MapType.prototype.getTile;MapType.prototype.releaseTile=function(node){if(node.getAttribute("tid")){var tileId=node.getAttribute("tid");if(this.tiles_[tileId]){delete this.tiles_[tileId]}for(var i=0;i<this.tileLayers_.length;i++){var t=this.tileLayers_[i];if(t.tiles_[tileId]){delete t.tiles_[tileId]}}}};MapType.prototype.releaseTile=MapType.prototype.releaseTile;MapType.prototype.setOpacity=function(op){this.opacity_=op;var tiles=this.tiles_;for(var x in tiles){if(tiles.hasOwnProperty(x)){var nodes=tiles[x].childNodes;for(var i=0;i<nodes.length;i++){setNodeOpacity_(nodes[i],op)}}}};MapType.prototype.getOpacity=function(){return this.opacity_};MapType.prototype.getTileLayers=function(){return this.tileLayers_};function MapOverlay(service,opt_overlayOpts){opt_overlayOpts=opt_overlayOpts||{};this.mapService_=(service instanceof MapService)?service:new MapService(service);this.minZoom=opt_overlayOpts.minZoom;this.maxZoom=opt_overlayOpts.maxZoom;this.opacity_=opt_overlayOpts.opacity||1;this.exportOptions_=opt_overlayOpts.exportOptions||{};this.drawing_=false;this.needsNewRefresh_=false;this.overlay_=null;this.div_=null;if(opt_overlayOpts.map){this.setMap(opt_overlayOpts.map)}this.map_=null;this.listeners_=[]}MapOverlay.prototype=new G.OverlayView();MapOverlay.prototype.onAdd=function(){var me=this;this.listeners_.push(G.event.addListener(this.getMap(),"bounds_changed",callback_(this.refresh,this)));this.listeners_.push(G.event.addListener(this.getMap(),"dragstart",function(){me.dragging=true}));this.listeners_.push(G.event.addListener(this.getMap(),"dragend",function(){me.dragging=false}));var map=this.getMap();map.agsOverlays=map.agsOverlays||new G.MVCArray();map.agsOverlays.push(this);setCopyrightInfo_(map);this.map_=map};MapOverlay.prototype.onAdd=MapOverlay.prototype.onAdd;MapOverlay.prototype.onRemove=function(){for(var i=0,j=this.listeners_.length;i<j;i++){G.event.removeListener(this.listeners_[i])}if(this.overlay_){this.overlay_.setMap(null)}var map=this.map_;var agsOvs=map.agsOverlays;if(agsOvs){for(var i=0,c=agsOvs.getLength();i<c;i++){if(agsOvs.getAt(i)==this){agsOvs.removeAt(i);break}}}setCopyrightInfo_(map);this.map_=null};MapOverlay.prototype.onRemove=MapOverlay.prototype.onRemove;MapOverlay.prototype.draw=function(){if(!this.drawing_||this.needsNewRefresh_===true){this.refresh()}};MapOverlay.prototype.draw=MapOverlay.prototype.draw;MapOverlay.prototype.getOpacity=function(){return this.opacity_};MapOverlay.prototype.setOpacity=function(opacity){var op=Math.min(Math.max(opacity,0),1);this.opacity_=op;if(this.overlay_){setNodeOpacity_(this.overlay_.div_,op)}};MapOverlay.prototype.getMapService=function(){return this.mapService_};MapOverlay.prototype.refresh=function(){if(this.drawing_===true){this.needsNewRefresh_=true;return}var m=this.getMap();var bnds=m?m.getBounds():null;if(!bnds){return}var params=this.exportOptions_;params.bounds=bnds;var sr=WEB_MERCATOR;var s=m.getDiv();params.width=s.offsetWidth;params.height=s.offsetHeight;if(s.offsetWidth==0||s.offsetHeight==0){return}var prj=m.getProjection();if(prj&&prj instanceof Projection){sr=prj.spatialReference_}params.imageSR=sr;triggerEvent_(this,"drawstart");var me=this;this.drawing_=true;if(!this.dragging&&this.overlay_){this.overlay_.setMap(null);this.overlay_=null}this.mapService_.exportMap(params,function(json){me.drawing_=false;if(me.needsNewRefresh_===true){me.needsNewRefresh_=false;me.refresh();return}if(json.href){if(me.overlay_){me.overlay_.setMap(null);me.overlay_=null}me.overlay_=new ImageOverlay(json.bounds,json.href,me.map_,me.opacity_)}triggerEvent_(me,"drawend")})};MapOverlay.prototype.isHidden=function(){return !(this.visible_&&this.isInZoomRange_())};MapOverlay.prototype.isInZoomRange_=function(){var z=this.getMap().getZoom();if((this.minZoom!==undefined&&z<this.minZoom)||(this.maxZoom!==undefined&&z>this.maxZoom)){return false}return true};MapOverlay.prototype.show=function(){this.visible_=true;this.div_.style.visibility="visible";this.refresh()};MapOverlay.prototype.hide=function(){this.visible_=false;this.div_.style.visibility="hidden"};function ImageOverlay(bounds,url,map,op){this.bounds_=bounds;this.url_=url;this.map_=map;this.div_=null;this.op_=op;this.setMap(map)}ImageOverlay.prototype=new G.OverlayView();ImageOverlay.prototype.onAdd=function(){var div=document.createElement("DIV");div.style.border="none";div.style.borderWidth="0px";div.style.position="absolute";div.style.backgroundImage="url("+this.url_+")";this.div_=div;var panes=this.getPanes();setNodeOpacity_(div,this.op_);panes.overlayLayer.appendChild(div)};ImageOverlay.prototype.draw=function(){var overlayProjection=this.getProjection();var sw=overlayProjection.fromLatLngToDivPixel(this.bounds_.getSouthWest());var ne=overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());var div=this.div_;div.style.left=sw.x+"px";div.style.top=ne.y+"px";div.style.width=(ne.x-sw.x)+"px";div.style.height=(sw.y-ne.y)+"px"};ImageOverlay.prototype.onRemove=function(){this.div_.parentNode.removeChild(this.div_);this.div_=null};function CopyrightControl(map){this.map_=map;setCopyrightInfo_(map)}CopyrightControl.prototype.refresh=function(){setCopyrightInfo_(this.map_)};gmaps.ags={SpatialReference:SpatialReference,Geographic:Geographic,LambertConformalConic:LambertConformalConic,SphereMercator:SphereMercator,TransverseMercator:TransverseMercator,SpatialRelationship:SpatialRelationship,GeometryType:GeometryType,SRUnit:SRUnit,Catalog:Catalog,MapService:MapService,Layer:Layer,GeocodeService:GeocodeService,GeometryService:GeometryService,GPService:GPService,GPTask:GPTask,RouteTask:RouteTask,Util:Util,Config:Config,Projection:Projection,TileLayer:TileLayer,MapOverlay:MapOverlay,MapType:MapType,CopyrightControl:CopyrightControl};window.gmaps=gmaps})();

